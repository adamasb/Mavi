import numpy as np
import matplotlib.pyplot as plt

# Data from: https://docs.google.com/spreadsheets/d/127lwTsR-2Daz0JqN1TbZ8FgITX9Df9TyXT1gtjlZ5nk/htmlview?pru=AAABg6N35dQ*MiLzwnQSemml5IZm-yb_Kg#
data = {
    "Niemann": np.array([71,36,39,65,55,77,62,49,51,68,96,69,65,96,17,98,74,60,76,54,48,73,51,100,68,71,78,80,71,78,62,91,64,71,64,59,35,54,71,62,46,55,64,71,85,51,70,94,47,81,62,59,50,80,66,62,68,75,71,43,50,63,54,70,52,79,89,54,74,56,80,43,81,100,54,51,69,66,55,52,51,54,74,63,66,72,37,72,73,51,62,72,73,66,61,61,25,51,71,86,83,79,60,93,78,87,42,68,66,52,75,80,78,63,98,72,89,56,40,77,72,50,65,37,69,93,65,75,78,83,69,30,46,81,64,70,50,59,61,58,70,72,57,63,51,58,69,97,61,55,59,85,45,51,53,52,88,62,92,81,97,63,63,52,83,54,74,79,54,74,62,52,53,85,63,58,50,35,69,75,27,29,53,44,83,69,69,72,73,84,71,61,92,75,100,76,60,62,79,58,83,51,67,80,86,71,62,77,51,64,79,67,40,75,100,65,64,54,67,48,61,59,84,62,30,54,56,71,54,55,62,100,100,49,54,38,49,65,59,79,66,70,98,73,89,47,73,100,61,64,67,80,70,48,75,66,54,43,74,91,77,56,46,24,39,20,46,59,64,71,50,40,90,72,90,78,90,49,42,42,66,91,80,69,50,26,72,85,64,100,59,67,54,68,84,92,43,61,92,71,70,69,66,46,69,80,46,39,71,77,47,100,53,88,100,74,72,73,68,62,44,48,49,60,69,72,82,59,77,60,67,67,56,42,56,62,83,82,91,48,57,75,69,44,59,78,88,46,58,36,44,88,69,88,56,66,55,61,49,95,59,30,69,67,72,84,58,50,82,76,65,85,68,70,62,61,73,62,67,76,77,51,45,23,79,56,69,72,61,69,49,72,47,69,69,68,49,93,63]),
    # add more player data here
}

x = data['Niemann']
k1 = len( x[x >= 90] )
n1 = len(x)

# Magnus data from: https://twitter.com/ty_johannes/status/1574780445744668673/photo/1
k2 = 4
n2 = 108 # Excluding short games.


S = 1
k1 *= S
n1 *= S

k2 *= S
n2 *= S

# k2 = 10
# n2 = 399

# k1 = 2
# n1 = 100

d = 0
l2k = (k1+k2) / (n1+n2) - d * n1 / (n1+n2)

def V(x1, x2, n1, n2):
    return x1/n1**2 + x2 / n2**2 + 1e-8

def T(x1,x2, n1, n2, d=0):
    return ( (x1 / n1 - x2 / n2) - d ) / np.sqrt(V(x1,x2,n1,n2))

XM = 200
M = np.zeros((XM, XM))
from scipy.special import gammaln
def ppr(n, lam):
    return np.exp( -lam + np.log(lam) * n - gammaln(n+1) )


for x1 in range(M.shape[0]):
    for x2 in range(M.shape[1]):
        M[x1,x2] = ppr(x1, n1 * (l2k + d) ) * ppr(x2, n2 * l2k) * (T(x1,x2,n1,n2, d) >= T(k1,k2,n1,n2,d)  )

p = M.sum().sum()

print("p value is: ", p)
plt.imshow(M)
plt.show()



a =3