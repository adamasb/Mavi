2022-11-18 15:28:05,113	INFO trainable.py:160 -- Trainable.setup took 52.539 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-11-18 15:28:05,115	WARNING util.py:65 -- Install gputil for GPU system monitoring.
Main training step 0
Running custom evaluation function...
training epoch 0 3 -1.600000000000001 -5.333333333333325
Main training step 1
Running custom evaluation function...
training epoch 1 7 -0.40000000000000013 -4.614285714285707
Main training step 2
Running custom evaluation function...
training epoch 2 16 0.6 -2.531249999999997
Main training step 3
Running custom evaluation function...
training epoch 3 33 0.8 -1.3151515151515136
Main training step 4
Running custom evaluation function...
training epoch 4 63 0.8 -0.4809523809523801
Main training step 5
Running custom evaluation function...
training epoch 5 96 0.8 -0.14791666666666617
Main training step 6
Running custom evaluation function...
training epoch 6 100 0.8 0.5479999999999999
Main training step 7
Running custom evaluation function...
training epoch 7 100 0.8 0.6419999999999999
Main training step 8
Running custom evaluation function...
training epoch 8 100 0.8 0.6609999999999998
Main training step 9
Running custom evaluation function...
training epoch 9 100 0.8 0.6510000000000001
Main training step 10
Running custom evaluation function...
training epoch 10 100 0.8 0.665
Main training step 11
Running custom evaluation function...
training epoch 11 100 0.8 0.662
Main training step 12
2022-11-18 15:49:08,924	ERROR worker.py:399 -- Unhandled error (suppress with 'RAY_IGNORE_UNHANDLED_ERRORS=1'): [36mray::RolloutWorker.set_weights()[39m (pid=20256, ip=127.0.0.1, repr=<ray.rllib.evaluation.rollout_worker.RolloutWorker object at 0x00000203B78850A0>)
  File "python\ray\_raylet.pyx", line 620, in ray._raylet.execute_task
  File "C:\Users\adams\AppData\Local\Programs\Python\Python39\lib\site-packages\ray\_private\memory_monitor.py", line 162, in raise_if_low_memory
    raise RayOutOfMemoryError(
ray._private.memory_monitor.RayOutOfMemoryError: More than 95% of the memory on node Surface4Beilin is used (15.09 / 15.85 GB). The top 10 memory consumers are:
PID	MEM	COMMAND
20256	7.92GiB	C:\Users\adams\AppData\Local\Programs\Python\Python39\python.exe C:\Users\adams\AppData\Local\Progra
19848	0.42GiB	C:\Users\adams\AppData\Local\Programs\Python\Python39\python.exe c:\Users\adams\.vscode\extensions\m
9952	0.29GiB	C:\Program Files\Microsoft OneDrive\OneDrive.exe /background
6740	0.28GiB	C:\WINDOWS\Explorer.EXE
14008	0.23GiB	C:\Users\adams\AppData\Local\Programs\Microsoft VS Code\Code.exe --type=renderer --user-data-dir=C:\
1572	0.22GiB	C:\Users\adams\AppData\Local\Programs\Messenger\Messenger.exe
8904	0.21GiB	C:\Program Files\Google\Chrome\Application\chrome.exe
16548	0.19GiB	C:\Program Files\Google\Chrome\Application\chrome.exe --type=renderer --display-capture-permissions-
13756	0.19GiB	C:\Program Files\Google\Chrome\Application\chrome.exe --type=renderer --display-capture-permissions-
13528	0.14GiB	C:\Users\adams\AppData\Local\Programs\Microsoft VS Code\Code.exe --type=gpu-process --user-data-dir=
In addition, up to 0.0 GiB of shared memory is currently being used by the Ray object store.
---
--- Tip: Use the `ray memory` command to list active objects in the cluster.
--- To disable OOM exceptions, set RAY_DISABLE_MEMORY_MONITOR=1.
---
Backend QtAgg is interactive backend. Turning interactive mode on.
